image: bohushvitali/frontend-ci

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375
  WEB_APPLIATOIN_STAGING_URL: https://sandbox-bcdc7.firebaseapp.com/

services:
  - docker:dind

stages:
  - build
  - test
  - staging
  - analyze
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .pnpm-store/
    - sources/frontend/node_modules/
    - sources/frontend/functions/node_modules/

before_script:
  - mkdir -p .pnpm-store
  - npm config set store .pnpm-store
  - npm set verify-store-integrity false

frontend-web-application-build:
  stage: build
  environment:
    name: staging
  script:
    - pnpm install --prefix sources/frontend --shamefully-flatten
    - ls .pnpm-store
    # - ls
    # - npm config set store pnpm-store
    # - npm set verify-store-integrity false
    # - pnpm install --prefix sources/frontend --shamefully-flatten
    # - npm --prefix sources/frontend run build.web.application
    - echo "Build Finished"
  cache:
    key: ${CI_COMMIT_REF_SLUG}
  artifacts:
    paths:
      - sources/frontend/dist

frontend-web-application:
  stage: test
  environment:
    name: staging
  script:
    - ls .pnpm-store
    - ls sources/frontend/dist

    # - ls
    # - npm config set store pnpm-store
    # - npm set verify-store-integrity false
    # - pnpm install --prefix sources/frontend --shamefully-flatten
    # - npm --prefix sources/frontend run build.web.application
    # - echo "Build Finished"
  cache:
    key: ${CI_COMMIT_REF_SLUG}
  artifacts:
    paths:
      - sources/frontend/dist

# check-formatting:
#   stage: test
#   script:
#     - npm --prefix sources/frontend run format.check $(git rev-parse $CI_COMMIT_SHA) $CI_COMMIT_SHA
#     - echo "Format Check Finished"
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}

# check-linting:
#   stage: test
#   script:
#     - npm --prefix sources/frontend run lint.check
#     - echo "Linting Check Finished"
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}

# frontend-web-application-unit-tests:
#   stage: test
#   environment:
#     name: staging
#   script:
#     - ls
#     - npm config set store pnpm-store
#     - pnpm install --prefix sources/frontend --shamefully-flatten
#     - npm --prefix sources/application run test.jest.coverage
#     - echo "Web Application Unit Tests Finished"
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}
#   artifacts:
#     paths:
#       - sources/frontend/reports

# frontend-web-application-e2e-tests:
#   stage: test
#   environment:
#     name: staging
#   script:
#     - ls
#     - npm config set store pnpm-store
#     - pnpm install --prefix sources/frontend --shamefully-flatten
#     - npm --prefix sources/frontend run e2e.web.application.report
#     - echo "Web Application E2E Tests Finished"
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}
#   artifacts:
#     paths:
#       - sources/frontend/reports

# buildsize:
#   stage: test
#   script:
#     - echo 1

# depgraph:
#   stage: test
#   script:
#     - echo 1

# deploy1:
#   stage: deploy
#   script:
#     # - pnpm install --prefix sources/frontend/functions
#     - echo "Do your deploy here"

build-master:
  before_script:
    - echo Skip
  image: docker:stable
  stage: build
  script:
    - docker run hello-world
  only:
    - master
